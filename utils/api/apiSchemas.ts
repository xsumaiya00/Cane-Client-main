/**
 * Generated by @openapi-codegen
 *
 * @version 0.0.0
 */
export type Activity = {
  id: number;
  user: string;
  module: string;
  /**
   * @format date-time
   */
  timestamp?: string;
  result: string;
  question: number;
};

export type BaseActivity = {
  activities: {
    [key: string]: any;
  }[];
};

export type HRTPredictionRequest = {
  base64_svc_data: string;
  task_number: number;
};

export type IERPredictionRequest = {
  image_base64: string;
};

export type Login = {
  username?: string;
  /**
   * @format email
   */
  email?: string;
  password: string;
};

export type Module = {
  id: number;
  /**
   * @maxLength 50
   * @pattern ^[-a-zA-Z0-9_]+$
   */
  slug: string;
  /**
   * @maxLength 255
   */
  title: string;
  instructions: string;
  scale?: void | null;
};

export type PasswordChange = {
  /**
   * @maxLength 128
   */
  new_password1: string;
  /**
   * @maxLength 128
   */
  new_password2: string;
};

/**
 * Serializer for requesting a password reset e-mail.
 */
export type PasswordReset = {
  /**
   * @format email
   */
  email: string;
};

/**
 * Serializer for confirming a password reset attempt.
 */
export type PasswordResetConfirm = {
  /**
   * @maxLength 128
   */
  new_password1: string;
  /**
   * @maxLength 128
   */
  new_password2: string;
  uid: string;
  token: string;
};

export type PatchedActivity = {
  id?: number;
  user?: string;
  module?: string;
  /**
   * @format date-time
   */
  timestamp?: string;
  result?: string;
  question?: number;
};

export type PatchedModule = {
  id?: number;
  /**
   * @maxLength 50
   * @pattern ^[-a-zA-Z0-9_]+$
   */
  slug?: string;
  /**
   * @maxLength 255
   */
  title?: string;
  instructions?: string;
  scale?: void | null;
};

export type PatchedQuestionCreateUpdate = {
  module?: number;
  /**
   * @maxLength 255
   */
  title?: string;
};

/**
 * User model w/o password
 */
export type PatchedUserDetails = {
  pk?: number;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   *
   * @pattern ^[\w.@+-]+$
   * @maxLength 150
   */
  username?: string;
  /**
   * @format email
   */
  email?: string;
  /**
   * @maxLength 150
   */
  first_name?: string;
  /**
   * @maxLength 150
   */
  last_name?: string;
};

export type Question = {
  id: number;
  module: Module;
  /**
   * @maxLength 255
   */
  title: string;
  created_by?: number | null;
  /**
   * @format date-time
   */
  created_at: string;
  /**
   * @format date-time
   */
  updated_at: string;
};

export type QuestionCreateUpdate = {
  module: number;
  /**
   * @maxLength 255
   */
  title: string;
};

export type Register = {
  /**
   * @maxLength 150
   * @minLength 1
   */
  username: string;
  /**
   * @format email
   */
  email: string;
  password1: string;
  password2: string;
};

export type ResendEmailVerification = {
  /**
   * @format email
   */
  email: string;
};

export type RestAuthDetail = {
  detail: string;
};

export type SERPredictionRequest = {
  /**
   * @format uri
   */
  file: string;
};

export type TERPredictionRequest = {
  model_version: string;
  context: string;
  sentence: string;
  labels: string[];
};

/**
 * Serializer for Token model.
 */
export type Token = {
  /**
   * @maxLength 40
   */
  key: string;
};

/**
 * User model w/o password
 */
export type UserDetails = {
  pk: number;
  /**
   * Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.
   *
   * @pattern ^[\w.@+-]+$
   * @maxLength 150
   */
  username: string;
  /**
   * @format email
   */
  email: string;
  /**
   * @maxLength 150
   */
  first_name?: string;
  /**
   * @maxLength 150
   */
  last_name?: string;
};

export type VerifyEmail = {
  key: string;
};
